# -*- coding: utf-8 -*-
"""ensino-dados-abertos-ufrn.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1BYOGhPpcj4eSq4ig0lRQMLf6pk-fVjFA
"""

!apt-get install inxi -y -qq &> /dev/null

!inxi -F

import os
import warnings
import pandas as pd
import matplotlib.pyplot as plt
import plotly.express as px
import seaborn as sns
import numpy as np
import plotly as py
import plotly.graph_objs as go
from sklearn.cluster import KMeans

warnings.filterwarnings("ignore")
py.offline.init_notebook_mode(connected = True)

supress_wget_output = True;
dropna_after_reading_csv = False;
dropna_after_merging_dfs = True;

if supress_wget_output:
  !wget -nc https://dados.ufrn.br/dataset/3fea67e8-6916-4ed0-aaa6-9a8ca06a9bdc/resource/9a3521d2-4bc5-4fda-93f0-f701c8a20727/download/componentes-curriculares-presenciais.csv &> /dev/null
  !wget -nc https://dados.ufrn.br/dataset/3fea67e8-6916-4ed0-aaa6-9a8ca06a9bdc/resource/99dd0a7d-4908-4e85-9f20-d58c8195260e/download/componentes-curriculares-semi-presenciais.csv &> /dev/null
  !wget -nc https://dados.ufrn.br/dataset/3fea67e8-6916-4ed0-aaa6-9a8ca06a9bdc/resource/d1de5b44-0ae6-4a22-8dac-ae44aa1c3248/download/componentes-curriculares-ead.csv &> /dev/null
  !wget -nc https://dados.ufrn.br/dataset/8bf1a468-48ff-4f4d-95ee-b17b7a3a5592/resource/ff0a457e-76fa-4aca-ad99-48aebd7db070/download/docentes.csv &> /dev/null
else:
  !wget -nc https://dados.ufrn.br/dataset/3fea67e8-6916-4ed0-aaa6-9a8ca06a9bdc/resource/9a3521d2-4bc5-4fda-93f0-f701c8a20727/download/componentes-curriculares-presenciais.csv
  !wget -nc https://dados.ufrn.br/dataset/3fea67e8-6916-4ed0-aaa6-9a8ca06a9bdc/resource/99dd0a7d-4908-4e85-9f20-d58c8195260e/download/componentes-curriculares-semi-presenciais.csv
  !wget -nc https://dados.ufrn.br/dataset/3fea67e8-6916-4ed0-aaa6-9a8ca06a9bdc/resource/d1de5b44-0ae6-4a22-8dac-ae44aa1c3248/download/componentes-curriculares-ead.csv
  !wget -nc https://dados.ufrn.br/dataset/8bf1a468-48ff-4f4d-95ee-b17b7a3a5592/resource/ff0a457e-76fa-4aca-ad99-48aebd7db070/download/docentes.csv

componentes_curriculares = pd.read_csv('componentes-curriculares-presenciais.csv', sep=';', usecols=["id_componente","codigo","nivel","nome","unidade_responsavel"])
docentes = pd.read_csv('docentes.csv', sep=';')

componentes_curriculares.id_componente = componentes_curriculares.id_componente.astype(str)
componentes_curriculares.dropna(inplace=True)
componentes_curriculares = componentes_curriculares[~componentes_curriculares.id_componente.duplicated()]

class semestre:
  def __init__(self, identificador, csv_turmas, csv_matricula_componente):
    self.identificador = identificador
    self.csv_turmas = csv_turmas
    self.csv_matricula_componente = csv_matricula_componente
    self.rows_dropped = 0
    #self.rows_dropped = 0

semestres = []

'''
if supress_wget_output:
  !wget -nc https://dados.ufrn.br/dataset/1938623d-fb07-41a4-a55a-1691f7c3b8b5/resource/e6e4144f-4042-4fdc-84e0-76e9ec27ae7c/download/turmas-2014.1.csv &> /dev/null
  !wget -nc https://dados.ufrn.br/dataset/c8650d55-3c5a-4787-a126-d28a4ef902a6/resource/7081446d-39f9-4374-ad0b-86ecab97e569/download/matricula-componente-20141.csv &> /dev/null
else:
  !wget -nc https://dados.ufrn.br/dataset/1938623d-fb07-41a4-a55a-1691f7c3b8b5/resource/e6e4144f-4042-4fdc-84e0-76e9ec27ae7c/download/turmas-2014.1.csv
  !wget -nc https://dados.ufrn.br/dataset/c8650d55-3c5a-4787-a126-d28a4ef902a6/resource/7081446d-39f9-4374-ad0b-86ecab97e569/download/matricula-componente-20141.csv
csv_turmas_2014_1 = 'turmas-2014.1.csv'
csv_matricula_componente_2014_1 = 'matricula-componente-20141.csv'
semestres.append(semestre('2014.1', csv_turmas_2014_1, csv_matricula_componente_2014_1))'''

'''if supress_wget_output:
  !wget -nc https://dados.ufrn.br/dataset/1938623d-fb07-41a4-a55a-1691f7c3b8b5/resource/2c69547b-920f-4ec2-92c0-3fbc19512165/download/turmas-2014.2.csv &> /dev/null
  !wget -nc https://dados.ufrn.br/dataset/c8650d55-3c5a-4787-a126-d28a4ef902a6/resource/e974792c-b557-470c-bf3d-ede7d5b5e6a6/download/matricula-componente-20142.csv &> /dev/null
else:
  !wget -nc https://dados.ufrn.br/dataset/1938623d-fb07-41a4-a55a-1691f7c3b8b5/resource/2c69547b-920f-4ec2-92c0-3fbc19512165/download/turmas-2014.2.csv
  !wget -nc https://dados.ufrn.br/dataset/c8650d55-3c5a-4787-a126-d28a4ef902a6/resource/e974792c-b557-470c-bf3d-ede7d5b5e6a6/download/matricula-componente-20142.csv
csv_turmas_2014_2 = 'turmas-2014.2.csv'
csv_matricula_componente_2014_2 = 'matricula-componente-20142.csv'
semestres.append(semestre('2014.2', csv_turmas_2014_2, csv_matricula_componente_2014_2))'''

'''if supress_wget_output:
  !wget -nc https://dados.ufrn.br/dataset/1938623d-fb07-41a4-a55a-1691f7c3b8b5/resource/4d5aee5a-00b0-4ed6-a4be-59fa77a56797/download/turmas-2015.1.csv &> /dev/null
  !wget -nc https://dados.ufrn.br/dataset/c8650d55-3c5a-4787-a126-d28a4ef902a6/resource/9e7ba1c2-f92d-4b9c-9e91-3b026ecdf913/download/matriculas-de-2015.1.csv &> /dev/null
else:
  !wget -nc https://dados.ufrn.br/dataset/1938623d-fb07-41a4-a55a-1691f7c3b8b5/resource/4d5aee5a-00b0-4ed6-a4be-59fa77a56797/download/turmas-2015.1.csv
  !wget -nc https://dados.ufrn.br/dataset/c8650d55-3c5a-4787-a126-d28a4ef902a6/resource/9e7ba1c2-f92d-4b9c-9e91-3b026ecdf913/download/matriculas-de-2015.1.csv
csv_turmas_2015_1 = 'turmas-2015.1.csv'
csv_matricula_componente_2015_1 = 'matriculas-de-2015.1.csv'
semestres.append(semestre('2015.1', csv_turmas_2015_1, csv_matricula_componente_2015_1))'''

'''if supress_wget_output:
  !wget -nc https://dados.ufrn.br/dataset/1938623d-fb07-41a4-a55a-1691f7c3b8b5/resource/7c59621c-4a8b-49d4-b319-83cfea9bdf28/download/turmas-2015.2.csv &> /dev/null
  !wget -nc https://dados.ufrn.br/dataset/c8650d55-3c5a-4787-a126-d28a4ef902a6/resource/baa6c8b4-2072-417f-b238-c028ccc8c14b/download/matriculas-de-2015.2.csv &> /dev/null
else:
  !wget -nc https://dados.ufrn.br/dataset/1938623d-fb07-41a4-a55a-1691f7c3b8b5/resource/7c59621c-4a8b-49d4-b319-83cfea9bdf28/download/turmas-2015.2.csv
  !wget -nc https://dados.ufrn.br/dataset/c8650d55-3c5a-4787-a126-d28a4ef902a6/resource/baa6c8b4-2072-417f-b238-c028ccc8c14b/download/matriculas-de-2015.2.csv
csv_turmas_2015_2 = 'turmas-2015.2.csv'
csv_matricula_componente_2015_2 = 'matriculas-de-2015.2.csv'
semestres.append(semestre('2015.2', csv_turmas_2015_2, csv_matricula_componente_2015_2))'''

'''if supress_wget_output:
  !wget -nc https://dados.ufrn.br/dataset/1938623d-fb07-41a4-a55a-1691f7c3b8b5/resource/322d9977-ba15-47f1-8216-75a1ca78e197/download/turmas-2016.1.csv &> /dev/null
  !wget -nc https://dados.ufrn.br/dataset/c8650d55-3c5a-4787-a126-d28a4ef902a6/resource/4778d3ce-8898-46a8-a623-ee6a480a2980/download/matriculas-de-2016.1.csv &> /dev/null
else:
  !wget -nc https://dados.ufrn.br/dataset/1938623d-fb07-41a4-a55a-1691f7c3b8b5/resource/322d9977-ba15-47f1-8216-75a1ca78e197/download/turmas-2016.1.csv
  !wget -nc https://dados.ufrn.br/dataset/c8650d55-3c5a-4787-a126-d28a4ef902a6/resource/4778d3ce-8898-46a8-a623-ee6a480a2980/download/matriculas-de-2016.1.csv
csv_turmas_2016_1 = 'turmas-2016.1.csv'
csv_matricula_componente_2016_1 = 'matriculas-de-2016.1.csv'
semestres.append(semestre('2016.1', csv_turmas_2016_1, csv_matricula_componente_2016_1))'''

'''if supress_wget_output:
  !wget -nc https://dados.ufrn.br/dataset/1938623d-fb07-41a4-a55a-1691f7c3b8b5/resource/5e8e3228-7f22-40a2-9efd-561c44844567/download/turmas-2016.2.csv &> /dev/null
  !wget -nc https://dados.ufrn.br/dataset/c8650d55-3c5a-4787-a126-d28a4ef902a6/resource/f6179838-b619-4d7d-af9c-18c438b80dd4/download/matriculas-de-2016.2.csv &> /dev/null
else:
  !wget -nc https://dados.ufrn.br/dataset/1938623d-fb07-41a4-a55a-1691f7c3b8b5/resource/5e8e3228-7f22-40a2-9efd-561c44844567/download/turmas-2016.2.csv
  !wget -nc https://dados.ufrn.br/dataset/c8650d55-3c5a-4787-a126-d28a4ef902a6/resource/f6179838-b619-4d7d-af9c-18c438b80dd4/download/matriculas-de-2016.2.csv
csv_turmas_2016_2 = 'turmas-2016.2.csv'
csv_matricula_componente_2016_2 = 'matriculas-de-2016.2.csv'
semestres.append(semestre('2016.2', csv_turmas_2016_2, csv_matricula_componente_2016_2))'''

'''if supress_wget_output:
  !wget -nc https://dados.ufrn.br/dataset/1938623d-fb07-41a4-a55a-1691f7c3b8b5/resource/5e77d066-d506-45eb-a21e-76aa79616fef/download/turmas-2017.1.csv &> /dev/null
  !wget -nc https://dados.ufrn.br/dataset/c8650d55-3c5a-4787-a126-d28a4ef902a6/resource/79071c21-e32c-438f-b930-d1b6ccc02ec2/download/matricula-componente-20171.csv &> /dev/null
else:
  !wget -nc https://dados.ufrn.br/dataset/1938623d-fb07-41a4-a55a-1691f7c3b8b5/resource/5e77d066-d506-45eb-a21e-76aa79616fef/download/turmas-2017.1.csv
  !wget -nc https://dados.ufrn.br/dataset/c8650d55-3c5a-4787-a126-d28a4ef902a6/resource/79071c21-e32c-438f-b930-d1b6ccc02ec2/download/matricula-componente-20171.csv
csv_turmas_2017_1 = 'turmas-2017.1.csv'
csv_matricula_componente_2017_1 = 'matricula-componente-20171.csv'
semestres.append(semestre('2017.1', csv_turmas_2017_1, csv_matricula_componente_2017_1))'''

'''if supress_wget_output:
  !wget -nc https://dados.ufrn.br/dataset/1938623d-fb07-41a4-a55a-1691f7c3b8b5/resource/01fe7343-fdf0-4a67-b915-2386b7c2fecb/download/turmas-2017.2.csv &> /dev/null
  !wget -nc https://dados.ufrn.br/dataset/c8650d55-3c5a-4787-a126-d28a4ef902a6/resource/55dfe713-ff7c-4fa8-8d1d-d4294a025bff/download/matricula-componente-20172.csv &> /dev/null
else:
  !wget -nc https://dados.ufrn.br/dataset/1938623d-fb07-41a4-a55a-1691f7c3b8b5/resource/01fe7343-fdf0-4a67-b915-2386b7c2fecb/download/turmas-2017.2.csv
  !wget -nc https://dados.ufrn.br/dataset/c8650d55-3c5a-4787-a126-d28a4ef902a6/resource/55dfe713-ff7c-4fa8-8d1d-d4294a025bff/download/matricula-componente-20172.csv
csv_turmas_2017_2 = 'turmas-2017.2.csv'
csv_matricula_componente_2017_2 = 'matricula-componente-20172.csv'
semestres.append(semestre('2017.2', csv_turmas_2017_2, csv_matricula_componente_2017_2))'''

if supress_wget_output:
  !wget -nc https://dados.ufrn.br/dataset/1938623d-fb07-41a4-a55a-1691f7c3b8b5/resource/3ae16138-4214-4a30-ac2d-6cffd6237031/download/turmas-2018.1.csv &> /dev/null
  !wget -nc https://dados.ufrn.br/dataset/c8650d55-3c5a-4787-a126-d28a4ef902a6/resource/3c1feba4-ced1-466e-8e94-a040224a51dc/download/matricula-componente-20181.csv &> /dev/null
else:
  !wget -nc https://dados.ufrn.br/dataset/1938623d-fb07-41a4-a55a-1691f7c3b8b5/resource/3ae16138-4214-4a30-ac2d-6cffd6237031/download/turmas-2018.1.csv
  !wget -nc https://dados.ufrn.br/dataset/c8650d55-3c5a-4787-a126-d28a4ef902a6/resource/3c1feba4-ced1-466e-8e94-a040224a51dc/download/matricula-componente-20181.csv
csv_turmas_2018_1 = 'turmas-2018.1.csv'
csv_matricula_componente_2018_1 = 'matricula-componente-20181.csv'
semestres.append(semestre('2018.1', csv_turmas_2018_1, csv_matricula_componente_2018_1))

if supress_wget_output:
  !wget -nc https://dados.ufrn.br/dataset/1938623d-fb07-41a4-a55a-1691f7c3b8b5/resource/77fe7603-0e71-4e21-8cd4-cb823353023f/download/turmas-2018.2.csv &> /dev/null
  !wget -nc https://dados.ufrn.br/dataset/c8650d55-3c5a-4787-a126-d28a4ef902a6/resource/0bfcaf6a-4424-4983-8ba8-d330350a8fbe/download/matricula-componente-20182.csv &> /dev/null
else:
  !wget -nc https://dados.ufrn.br/dataset/1938623d-fb07-41a4-a55a-1691f7c3b8b5/resource/77fe7603-0e71-4e21-8cd4-cb823353023f/download/turmas-2018.2.csv
  !wget -nc https://dados.ufrn.br/dataset/c8650d55-3c5a-4787-a126-d28a4ef902a6/resource/0bfcaf6a-4424-4983-8ba8-d330350a8fbe/download/matricula-componente-20182.csv
csv_turmas_2018_2 = 'turmas-2018.2.csv'
csv_matricula_componente_2018_2 = 'matricula-componente-20182.csv'
semestres.append(semestre('2018.2', csv_turmas_2018_2, csv_matricula_componente_2018_2))

if supress_wget_output:
  !wget -nc https://dados.ufrn.br/dataset/1938623d-fb07-41a4-a55a-1691f7c3b8b5/resource/1e42cd66-69d6-48d5-a346-d46766fd2c9c/download/turmas-2019.1.csv &> /dev/null
  !wget -nc https://dados.ufrn.br/dataset/c8650d55-3c5a-4787-a126-d28a4ef902a6/resource/6d66d15a-8d0f-43a3-902b-d314f4a2a296/download/matricula-componente-20191.csv &> /dev/null
else:
  !wget -nc https://dados.ufrn.br/dataset/1938623d-fb07-41a4-a55a-1691f7c3b8b5/resource/1e42cd66-69d6-48d5-a346-d46766fd2c9c/download/turmas-2019.1.csv
  !wget -nc https://dados.ufrn.br/dataset/c8650d55-3c5a-4787-a126-d28a4ef902a6/resource/6d66d15a-8d0f-43a3-902b-d314f4a2a296/download/matricula-componente-20191.csv
csv_turmas_2019_1 = 'turmas-2019.1.csv'
csv_matricula_componente_2019_1 = 'matricula-componente-20191.csv'
semestres.append(semestre('2019.1', csv_turmas_2019_1, csv_matricula_componente_2019_1))

if supress_wget_output:
  !wget -nc https://dados.ufrn.br/dataset/1938623d-fb07-41a4-a55a-1691f7c3b8b5/resource/d9c2863e-d1b2-4afd-b7dd-09517d5ed17d/download/turmas-2019.2.csv &> /dev/null
  !wget -nc https://dados.ufrn.br/dataset/c8650d55-3c5a-4787-a126-d28a4ef902a6/resource/0d573a4f-de65-4c3d-b6bb-337473bc4e44/download/matricula-componente-20192.csv &> /dev/null
else:
  !wget -nc https://dados.ufrn.br/dataset/1938623d-fb07-41a4-a55a-1691f7c3b8b5/resource/d9c2863e-d1b2-4afd-b7dd-09517d5ed17d/download/turmas-2019.2.csv
  !wget -nc https://dados.ufrn.br/dataset/c8650d55-3c5a-4787-a126-d28a4ef902a6/resource/0d573a4f-de65-4c3d-b6bb-337473bc4e44/download/matricula-componente-20192.csv
csv_turmas_2019_2 = 'turmas-2019.2.csv'
csv_matricula_componente_2019_2 = 'matricula-componente-20192.csv'
semestres.append(semestre('2019.2', csv_turmas_2019_2, csv_matricula_componente_2019_2))

if supress_wget_output:
  !wget -nc https://dados.ufrn.br/dataset/1938623d-fb07-41a4-a55a-1691f7c3b8b5/resource/3a9fe77e-478d-4b18-b7bc-a4df57cbdf46/download/turmas-2020.1.csv &> /dev/null
  !wget -nc https://dados.ufrn.br/dataset/c8650d55-3c5a-4787-a126-d28a4ef902a6/resource/4e4dd1fb-fc0b-460d-b52a-9f37a42b82b3/download/matricula-componente-20201.csv &> /dev/null
else:
  !wget -nc https://dados.ufrn.br/dataset/1938623d-fb07-41a4-a55a-1691f7c3b8b5/resource/3a9fe77e-478d-4b18-b7bc-a4df57cbdf46/download/turmas-2020.1.csv
  !wget -nc https://dados.ufrn.br/dataset/c8650d55-3c5a-4787-a126-d28a4ef902a6/resource/4e4dd1fb-fc0b-460d-b52a-9f37a42b82b3/download/matricula-componente-20201.csv
csv_turmas_2020_1 = 'turmas-2020.1.csv'
csv_matricula_componente_2020_1 = 'matricula-componente-20201.csv'
semestres.append(semestre('2020.1', csv_turmas_2020_1, csv_matricula_componente_2020_1))

if supress_wget_output:
  !wget -nc https://dados.ufrn.br/dataset/1938623d-fb07-41a4-a55a-1691f7c3b8b5/resource/964f91df-f322-4e56-897b-f06cca611904/download/turmas-2020.6.csv &> /dev/null
  !wget -nc https://dados.ufrn.br/dataset/c8650d55-3c5a-4787-a126-d28a4ef902a6/resource/9d663129-879a-4663-b631-4bfd0ee08e98/download/matricula-componente-20206.csv &> /dev/null
else:
  !wget -nc https://dados.ufrn.br/dataset/1938623d-fb07-41a4-a55a-1691f7c3b8b5/resource/964f91df-f322-4e56-897b-f06cca611904/download/turmas-2020.6.csv
  !wget -nc https://dados.ufrn.br/dataset/c8650d55-3c5a-4787-a126-d28a4ef902a6/resource/9d663129-879a-4663-b631-4bfd0ee08e98/download/matricula-componente-20206.csv
csv_turmas_2020_6 = 'turmas-2020.6.csv'
csv_matricula_componente_2020_6 = 'matricula-componente-20206.csv'
semestres.append(semestre('2020.6', csv_turmas_2020_6, csv_matricula_componente_2020_6))

for semestre in semestres:
  semestre.turmas = pd.read_csv(semestre.csv_turmas, sep=';')
  semestre.matricula_componente = pd.read_csv(semestre.csv_matricula_componente, sep=';')

  if dropna_after_reading_csv:
    aux_1 = semestre.turmas.dropna(axis=0)
    aux_2 = semestre.matricula_componente.dropna(axis=0)
    semestre.rows_dropped += (semestre.turmas.size - aux_1.size) + (semestre.matricula_componente.size - aux_2.size)
    semestre.turmas = aux_1
    semestre.matricula_componente = aux_2

for semestre in semestres:
  print(semestre.identificador + ':')
  print('  rows_dropped: ' + str(semestre.rows_dropped))
  print('  turmas_df_size: ' + str(semestre.turmas.size))
  print('  matricula_componente_df_size: ' + str(semestre.matricula_componente.size))
  print()

colunas_merge = ["id_turma","siape","codigo","nivel_ensino","nome","unidade_responsavel", "situacao_turma","capacidade_aluno","descricao_horario"]

for semestre in semestres:
  aux_1 = semestre.turmas
  aux_1.rename(columns={'id_componente_curricular': 'id_componente'}, inplace=True)
  aux_1.id_componente = aux_1.id_componente.astype(str)
  semestre.turmas = aux_1
  aux_2 = pd.merge(semestre.turmas, componentes_curriculares, on='id_componente')[colunas_merge]
  if dropna_after_merging_dfs:
    aux_2.dropna(axis=0, inplace=True)

  semestre.df = aux_2

colunas_merge = ["id_turma", "nome_y", "codigo", "nivel_ensino","nome_x","capacidade_aluno", "descricao_horario"]

for semestre in semestres:
  aux_0 = semestre.df
  aux_0 = aux_0[aux_0.situacao_turma == 'CONSOLIDADA']
  aux_0.rename(columns={'siape': 'siape'}, inplace=True)
  aux_1 = pd.merge(aux_0, docentes, on='siape')[colunas_merge]
  aux_2 = semestre.matricula_componente[semestre.matricula_componente.id_turma.isin(aux_1.id_turma)]
  aux_3 = pd.merge(aux_2, aux_1, on='id_turma')
  semestre.df = aux_3

for semestre in semestres:
  aux_1 = semestre.df
  aux_1 = aux_1.replace({',': '.'}, regex=True)
  aux_1.capacidade_aluno = aux_1.capacidade_aluno.astype(np.int64)
  aux_1.nota = aux_1.nota.astype(np.float64)
  aux_1.media_final = aux_1.media_final.astype(np.float64)
  aux_1.id_curso = aux_1.id_curso.fillna(0).astype(np.ushort)
  aux_1.unidade = aux_1.unidade.fillna(0).astype(np.ushort)
  aux_1.faltas_unidade = aux_1.faltas_unidade.fillna(0).astype(np.ushort)
  aux_1.numero_total_faltas = aux_1.numero_total_faltas.fillna(0).astype(np.ushort)
  aux_1.capacidade_aluno = aux_1.capacidade_aluno.fillna(0).astype(np.ushort)
  aux_1.id_turma = aux_1.id_turma.fillna(0).astype(np.ushort)
  semestre.df = aux_1

def aprovado(row):
    if row["descricao"] == "APROVADO" or row["descricao"] == "APROVADO POR NOTA":
        return True
    else:
        return False

def reprovadoporfalta(row):
    if row["descricao"] == "REPROVADO POR FALTAS" or row["descricao"] == "REPROVADO POR NOTA E FALTA" or row["descricao"] == "REPROVADO POR MÉDIA E POR FALTAS":
        return True
    else:
        return False

def reposicao(row):
    if row["reposicao"] == "True":
        return True
    else:
        return False

def exclusao(row):
  if row["aprovado"] == 0:
    if row["media_final"] < 5:
      if row["reprovadoporfalta"] == True:
        return True;
        # ele tem que sair
      else:
        return False;
    else:
      return False;
  else:
    return False;

for semestre in semestres:
  aux_1 = semestre.df
  rotulos_1 = aux_1.apply(aprovado, axis = 1)
  aux_1["aprovado"] = rotulos_1
  rotulos_2 = aux_1.apply(reprovadoporfalta, axis = 1)
  aux_1["reprovadoporfalta"] = rotulos_2
  rotulos_3 = aux_1.apply(reposicao, axis = 1)
  aux_1["reposicao"] = rotulos_3
  aux_1['semestre'] = semestre.identificador

dfs = []
for semestre in semestres:
  dfs.append(semestre.df)
df = pd.concat(dfs, ignore_index=True)

df = df.dropna()
df = df.drop_duplicates()
df.reset_index(drop=True, inplace=True)
aux = df
df = aux.rename(columns = {'nome_y' : 'docente', 'nome_x' : 'disciplina'})

dfc = df[['discente', 'unidade', 'nota', 'media_final','aprovado', 'reposicao', 'reprovadoporfalta', 'numero_total_faltas', 'descricao','nivel_ensino', 'id_turma', 'id_curso', 'codigo', 'disciplina', 'docente','semestre']]

dfc.descricao.unique()

dfc = dfc[dfc["descricao"] != "INDEFERIDO"]
dfc = dfc[dfc["descricao"] != "EXCLUIDA"]
dfc = dfc[dfc["descricao"] != "TRANCADO"]
dfc = dfc[dfc["descricao"] != "CANCELADO"]
dfc = dfc[dfc["descricao"] != "DESISTENCIA"]
dfc = dfc[dfc["descricao"] != "AGUARDANDO DEFERIMENTO"]
dfc = dfc[dfc["descricao"] != "CUMPRIU"]
dfc = dfc[dfc["descricao"] != "EM ESPERA"]
dfc = dfc[dfc["descricao"] != "DISPENSADO"]

dfc = dfc[dfc["nivel_ensino"] == "GRADUAÇÃO"]

dfc.to_csv("dfc.csv")

filtrados = dfc
filtrados = filtrados.loc[filtrados['disciplina'] == 'INTRODUÇÃO ÀS TÉCNICAS DE PROGRAMAÇÃO']

rotulos_filtrados = filtrados.apply(exclusao, axis = 1)
filtrados["excluido"] = rotulos_filtrados
base_final = filtrados.loc[filtrados['excluido'] == False]
excluidos = filtrados.loc[filtrados['excluido'] == True]

# linhas excluidas pela regra
excluidos.size

# [discente, turma] excluidos pela regra
excluidos[excluidos.duplicated(subset = ["discente", "id_turma"], keep = 'first') != True].size

base_final.to_csv("base_final.csv")

excluidos.to_csv("excluidos.csv")

# [discente, turma] na base final
base_final[base_final.duplicated(subset = ["discente", "id_turma"], keep = 'first') != True].size

kmeansdb = base_final
dfkm = kmeansdb[['id_turma','discente', 'docente', 'unidade', 'nota', 'media_final','numero_total_faltas', 'aprovado', 'reposicao', 'reprovadoporfalta', 'semestre']]

def strhash_to_inthash(row):
  strhash = row['discente'];
  return hash(strhash) % 10**8;

def docentehash(row):
  strhash = row['docente'].split()[0];
  inthash = hash(strhash) % 10**1;
  return inthash;

def bool_to_int_aprovado(row):
  if row['aprovado'] == True:
    return 1;
  else:
    return 0;

def bool_to_int_reprovadoporfalta(row):
  if row['reprovadoporfalta'] == True:
    return 1;
  else:
    return 0;

def bool_to_int_reposicao(row):
  if row['reposicao'] == True:
    return 1;
  else:
    return 0;

def docentenome(row):
  return row['docente'].split()[0];

reduced_docente = dfkm.apply(docentenome, axis = 1)
dfkm["docente_nome"] = reduced_docente

inthashed_docente = dfkm.apply(docentehash, axis = 1)
dfkm["docente"] = inthashed_docente

inthashed_discente = dfkm.apply(strhash_to_inthash, axis = 1)
dfkm["discente"] = inthashed_discente 

aprovacao = dfkm.apply(bool_to_int_aprovado, axis = 1)
dfkm["aprovado"] = aprovacao 

reprovacaoporfalta = dfkm.apply(bool_to_int_reprovadoporfalta, axis = 1)
dfkm["reprovadoporfalta"] = reprovacaoporfalta 

reposicao = dfkm.apply(bool_to_int_reposicao, axis = 1)
dfkm["reposicao"] = reposicao 

normalized_docente=(dfkm.docente-dfkm.docente.min())/(dfkm.docente.max()-dfkm.docente.min())
dfkm["docente"] = normalized_docente

normalized_discente=(dfkm.discente-dfkm.discente.min())/(dfkm.discente.max()-dfkm.discente.min())
dfkm["discente"] = normalized_discente

normalized_unidade=(dfkm.unidade-dfkm.unidade.min())/(dfkm.unidade.max()-dfkm.unidade.min())
dfkm["unidade"] = normalized_unidade

normalized_nota=(dfkm.nota-dfkm.nota.min())/(dfkm.nota.max()-dfkm.nota.min())
dfkm["nota"] = normalized_nota

normalized_media_final=(dfkm.media_final-dfkm.media_final.min())/(dfkm.media_final.max()-dfkm.media_final.min())
dfkm["media_final"] = normalized_media_final

normalized_numero_total_faltas=(dfkm.numero_total_faltas-dfkm.numero_total_faltas.min())/(dfkm.numero_total_faltas.max()-dfkm.numero_total_faltas.min())
dfkm["numero_total_faltas"] = normalized_numero_total_faltas

dfkm.aprovado = dfkm.aprovado.astype(np.float64)
dfkm.reprovadoporfalta = dfkm.reprovadoporfalta.astype(np.float64)
dfkm.reposicao = dfkm.reposicao.astype(np.float64)

dfkm.info()

describedb = dfkm
describedb = dfkm[['nota', 'media_final', 'numero_total_faltas', 'aprovado']]
describedb.describe()

dfkm.to_csv("dfkm.csv")

df

dfc

base_final

excluidos

dfkm

dfkm.loc[dfkm['semestre'] == '2019.1']

dfkm.loc[dfkm['semestre'] == '2020.6']